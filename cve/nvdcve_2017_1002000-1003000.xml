<?xml version="1.0" encoding="utf-8"?>
<nvd xmlns="http://scap.nist.gov/schema/feed/vulnerability/2.0" xmlns:cpe-lang="http://cpe.mitre.org/language/2.0" xmlns:cvss="http://scap.nist.gov/schema/cvss-v2/0.2" xmlns:patch="http://scap.nist.gov/schema/patch/0.1" xmlns:scap-core="http://scap.nist.gov/schema/scap-core/0.1" xmlns:vuln="http://scap.nist.gov/schema/vulnerability/0.4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <entry id="CVE-2017-1002000">
    <vuln:cve-id>CVE-2017-1002000</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.200-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.200-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=179" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=179</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins-wp/mobile-friendly-app-builder-by-easytouch/" xml:lang="en">https://wordpress.org/plugins-wp/mobile-friendly-app-builder-by-easytouch/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin mobile-friendly-app-builder-by-easytouch v3.0, The code in file ./mobile-friendly-app-builder-by-easytouch/server/images.php doesn't require authentication or check that the user is allowed to upload content.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002001">
    <vuln:cve-id>CVE-2017-1002001</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.233-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.247-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=180" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=180</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins-wp/mobile-app-builder-by-wappress/" xml:lang="en">https://wordpress.org/plugins-wp/mobile-app-builder-by-wappress/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin mobile-app-builder-by-wappress v1.05, The plugin includes unlicensed vulnerable CMS software from http://www.invedion.com.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002002">
    <vuln:cve-id>CVE-2017-1002002</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.280-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.280-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=181" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=181</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins-wp/webapp-builder/" xml:lang="en">https://wordpress.org/plugins-wp/webapp-builder/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin webapp-builder v2.0, The plugin includes unlicensed vulnerable CMS software from http://www.invedion.com/</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002003">
    <vuln:cve-id>CVE-2017-1002003</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.310-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.327-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=182" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=182</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins-wp/wp2android-turn-wp-site-into-android-app/" xml:lang="en">https://wordpress.org/plugins-wp/wp2android-turn-wp-site-into-android-app/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin wp2android-turn-wp-site-into-android-app v1.1.4, The plugin includes unlicensed vulnerable CMS software from http://www.invedion.com.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002004">
    <vuln:cve-id>CVE-2017-1002004</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.357-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.357-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=183" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=183</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/dtracker/" xml:lang="en">https://wordpress.org/plugins/dtracker/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin DTracker v1.5, In file ./dtracker/download.php user input isn't sanitized via the id variable before adding it to the end of an SQL query.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002005">
    <vuln:cve-id>CVE-2017-1002005</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.390-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.390-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=183" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=183</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/dtracker/" xml:lang="en">https://wordpress.org/plugins/dtracker/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin DTracker v1.5, In file ./dtracker/delete.php user input isn't sanitized via the contact_id variable before adding it to the end of an SQL query.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002006">
    <vuln:cve-id>CVE-2017-1002006</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.420-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.420-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=186" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=186</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/dtracker/" xml:lang="en">https://wordpress.org/plugins/dtracker/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin DTracker v1.5, The code dtracker/save_contact.php doesn't check that the user is authorized before injecting new contacts into the wp_contact table.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002007">
    <vuln:cve-id>CVE-2017-1002007</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.467-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.467-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=186" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=186</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/dtracker/" xml:lang="en">https://wordpress.org/plugins/dtracker/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin DTracker v1.5, The code dtracker/save_mail.php doesn't check that the user is authorized before injecting new contacts into the wp_contact table.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002008">
    <vuln:cve-id>CVE-2017-1002008</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.497-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.497-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=187" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=187</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/membership-simplified-for-oap-members-only" xml:lang="en">https://wordpress.org/plugins/membership-simplified-for-oap-members-only</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin membership-simplified-for-oap-members-only v1.58, The file download code located membership-simplified-for-oap-members-only/download.php does not check whether a user is logged in and has download privileges.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002009">
    <vuln:cve-id>CVE-2017-1002009</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.530-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.547-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://membership.officeautopilot.com/get-it-now/" xml:lang="en">http://membership.officeautopilot.com/get-it-now/</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=188" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=188</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin Membership Simplified v1.58, The code in membership-simplified-for-oap-members-only/updateDB.php is vulnerable to blind SQL injection because it doesn't sanitize user input via recordId in the delete function.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002010">
    <vuln:cve-id>CVE-2017-1002010</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.577-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.577-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://membership.officeautopilot.com/get-it-now/" xml:lang="en">http://membership.officeautopilot.com/get-it-now/</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=188" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=188</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin Membership Simplified v1.58, The code in membership-simplified-for-oap-members-only/updateDB.php is vulnerable to blind SQL injection because it doesn't sanitize user input via recordId in the delete_media function.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002011">
    <vuln:cve-id>CVE-2017-1002011</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.607-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.607-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=189" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=189</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/image-gallery-with-slideshow/" xml:lang="en">https://wordpress.org/plugins/image-gallery-with-slideshow/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin image-gallery-with-slideshow v1.5.2, There is a stored XSS vulnerability via the $value-&gt;gallery_name and $value-&gt;gallery_description where anyone with privileges to modify or add galleries/images and inject javascript into the database.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002012">
    <vuln:cve-id>CVE-2017-1002012</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.640-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.640-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=189" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=189</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/image-gallery-with-slideshow/" xml:lang="en">https://wordpress.org/plugins/image-gallery-with-slideshow/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin image-gallery-with-slideshow v1.5.2, In image-gallery-with-slideshow/admin_setting.php the following snippet of code does not sanitize input via the gid variable before passing it into an SQL statement.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002013">
    <vuln:cve-id>CVE-2017-1002013</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.670-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.687-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=189" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=189</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/image-gallery-with-slideshow/" xml:lang="en">https://wordpress.org/plugins/image-gallery-with-slideshow/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin image-gallery-with-slideshow v1.5.2, Blind SQL Injection via imgid parameter in image-gallery-with-slideshow/admin_setting.php.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002014">
    <vuln:cve-id>CVE-2017-1002014</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.717-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.717-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=189" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=189</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/image-gallery-with-slideshow/" xml:lang="en">https://wordpress.org/plugins/image-gallery-with-slideshow/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin image-gallery-with-slideshow v1.5.2, Blind SQL Injection in image-gallery-with-slideshow/admin_setting.php via gallery_name parameter.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002015">
    <vuln:cve-id>CVE-2017-1002015</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.747-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.747-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=189" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=189</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/image-gallery-with-slideshow/" xml:lang="en">https://wordpress.org/plugins/image-gallery-with-slideshow/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin image-gallery-with-slideshow v1.5.2, Blind SQL Injection in image-gallery-with-slideshow/admin_setting.php via selectMulGallery parameter.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002016">
    <vuln:cve-id>CVE-2017-1002016</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.780-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.780-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=190" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=190</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/flickr-picture-backup/" xml:lang="en">https://wordpress.org/plugins/flickr-picture-backup/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin flickr-picture-backup v0.7, The code in flickr-picture-download.php doesn't check to see if the user is authenticated or that they have permission to upload files.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002017">
    <vuln:cve-id>CVE-2017-1002017</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.810-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.827-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=191" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=191</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/gift-certificate-creator/" xml:lang="en">https://wordpress.org/plugins/gift-certificate-creator/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin gift-certificate-creator v1.0, The code in gc-list.php doesn't sanitize user input to prevent a stored XSS vulnerability.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002018">
    <vuln:cve-id>CVE-2017-1002018</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.857-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.857-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=192" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=192</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/eventr/" xml:lang="en">https://wordpress.org/plugins/eventr/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin eventr v1.02.2, The edit.php form and attendees.php code do not sanitize input, this allows for blind SQL injection via the event parameter.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002019">
    <vuln:cve-id>CVE-2017-1002019</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.890-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.890-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=192" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=192</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/eventr/" xml:lang="en">https://wordpress.org/plugins/eventr/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin eventr v1.02.2, The edit.php form and event_form.php code do not sanitize input, this allows for blind SQL injection via the event parameter.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002020">
    <vuln:cve-id>CVE-2017-1002020</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.920-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.920-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=193" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=193</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/surveys/" xml:lang="en">https://wordpress.org/plugins/surveys/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin surveys v1.01.8, The code in survey_form.php does not sanitize the action variable before placing it inside of an SQL query.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002021">
    <vuln:cve-id>CVE-2017-1002021</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:00.950-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:00.950-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=193" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=193</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/surveys/" xml:lang="en">https://wordpress.org/plugins/surveys/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin surveys v1.01.8, The code in individual_responses.php does not sanitize the survey_id variable before placing it inside of an SQL query.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002022">
    <vuln:cve-id>CVE-2017-1002022</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.030-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.060-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=193" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=193</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/surveys/" xml:lang="en">https://wordpress.org/plugins/surveys/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin surveys v1.01.8, The code in questions.php does not sanitize the survey variable before placing it inside of an SQL query.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002023">
    <vuln:cve-id>CVE-2017-1002023</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.123-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.123-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=194" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=194</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/easy-team-manager/" xml:lang="en">https://wordpress.org/plugins/easy-team-manager/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin Easy Team Manager v1.3.2, The code does not sanitize id before making it part of an SQL statement in file ./easy-team-manager/inc/easy_team_manager_desc_edit.php</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002024">
    <vuln:cve-id>CVE-2017-1002024</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.153-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.153-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://kindeditor.org" xml:lang="en">http://kindeditor.org</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=195" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=195</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://github.com/kindsoft/kindeditor" xml:lang="en">https://github.com/kindsoft/kindeditor</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in web application Kind Editor v4.1.12, kindeditor/php/upload_json.php does not check authentication before allow users to upload files.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002025">
    <vuln:cve-id>CVE-2017-1002025</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.187-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.200-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=196" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=196</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/add-edit-delete-listing-for-member-module/" xml:lang="en">https://wordpress.org/plugins/add-edit-delete-listing-for-member-module/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin add-edit-delete-listing-for-member-module v1.0, The plugin author does not sanitize user supplied input via $act before passing it into an SQL statement.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002026">
    <vuln:cve-id>CVE-2017-1002026</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.233-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.233-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=197" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=197</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/event-espresso-free/" xml:lang="en">https://wordpress.org/plugins/event-espresso-free/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin Event Expresso Free v3.1.37.11.L, The function edit_event_category does not sanitize user-supplied input via the $id parameter before passing it into an SQL statement.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002027">
    <vuln:cve-id>CVE-2017-1002027</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.247-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.263-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=198" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=198</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/rk-responsive-contact-form/" xml:lang="en">https://wordpress.org/plugins/rk-responsive-contact-form/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin rk-responsive-contact-form v1.0, The variable $delid isn't sanitized before being passed into an SQL query in file ./rk-responsive-contact-form/include/rk_user_list.php.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002028">
    <vuln:cve-id>CVE-2017-1002028</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.327-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.343-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://www.vapidlabs.com/advisory.php?v=199" xml:lang="en">http://www.vapidlabs.com/advisory.php?v=199</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/wordpress-gallery-transformation/" xml:lang="en">https://wordpress.org/plugins/wordpress-gallery-transformation/</vuln:reference>
    </vuln:references>
    <vuln:summary>Vulnerability in wordpress plugin wordpress-gallery-transformation v1.0, SQL injection is in ./wordpress-gallery-transformation/gallery.php via $jpic parameter being unsanitized before being passed into an SQL query.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002100">
    <vuln:cve-id>CVE-2017-1002100</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.373-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.390-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://github.com/kubernetes/kubernetes/issues/47611" xml:lang="en">https://github.com/kubernetes/kubernetes/issues/47611</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://groups.google.com/d/msg/kubernetes-security-announce/n3VBg_WJZic/-ddIqKXqAAAJ" xml:lang="en">https://groups.google.com/d/msg/kubernetes-security-announce/n3VBg_WJZic/-ddIqKXqAAAJ</vuln:reference>
    </vuln:references>
    <vuln:summary>Default access permissions for Persistent Volumes (PVs) created by the Kubernetes Azure cloud provider in versions 1.6.0 to 1.6.5 are set to "container" which exposes a URI that can be accessed without authentication on the public internet. Access to the URI string requires privileged access to the Kubernetes cluster or authenticated access to the Azure portal.</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002150">
    <vuln:cve-id>CVE-2017-1002150</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.403-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.420-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://github.com/fedora-infra/python-fedora/commit/b27f38a67573f4c989710c9bfb726dd4c1eeb929" xml:lang="en">https://github.com/fedora-infra/python-fedora/commit/b27f38a67573f4c989710c9bfb726dd4c1eeb929</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://github.com/fedora-infra/python-fedora/commit/b27f38a67573f4c989710c9bfb726dd4c1eeb929.patch" xml:lang="en">https://github.com/fedora-infra/python-fedora/commit/b27f38a67573f4c989710c9bfb726dd4c1eeb929.patch</vuln:reference>
    </vuln:references>
    <vuln:summary>python-fedora 0.8.0 and lower is vulnerable to an open redirect resulting in loss of CSRF protection</vuln:summary>
  </entry>
  <entry id="CVE-2017-1002151">
    <vuln:cve-id>CVE-2017-1002151</vuln:cve-id>
    <vuln:published-datetime>2017-09-14T09:29:01.467-04:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2017-09-14T09:29:01.467-04:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://pagure.io/pagure/c/c92108097e8ae4702c115ae4702b63d960838e75.patch" xml:lang="en">https://pagure.io/pagure/c/c92108097e8ae4702c115ae4702b63d960838e75.patch</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://pagure.io/pagure/pull-request/2426" xml:lang="en">https://pagure.io/pagure/pull-request/2426</vuln:reference>
    </vuln:references>
    <vuln:summary>Pagure 3.3.0 and earlier is vulnerable to loss of confidentially due to improper authorization</vuln:summary>
  </entry>
</nvd>