<?xml version="1.0" encoding="utf-8"?>
<nvd xmlns="http://scap.nist.gov/schema/feed/vulnerability/2.0" xmlns:cpe-lang="http://cpe.mitre.org/language/2.0" xmlns:cvss="http://scap.nist.gov/schema/cvss-v2/0.2" xmlns:patch="http://scap.nist.gov/schema/patch/0.1" xmlns:scap-core="http://scap.nist.gov/schema/scap-core/0.1" xmlns:vuln="http://scap.nist.gov/schema/vulnerability/0.4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <entry id="CVE-2018-3610">
    <vuln:cve-id>CVE-2018-3610</vuln:cve-id>
    <vuln:published-datetime>2018-01-09T16:29:00.500-05:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2018-01-09T21:29:33.630-05:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>CONFIRM</vuln:source>
      <vuln:reference href="https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00108&amp;languageid=en-fr" xml:lang="en">https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00108&amp;languageid=en-fr</vuln:reference>
    </vuln:references>
    <vuln:summary>SEMA driver in Intel Driver and Support Assistant before version 3.1.1 allows a local attacker the ability to read and writing to Memory Status registers potentially allowing information disclosure or a denial of service condition.</vuln:summary>
  </entry>
  <entry id="CVE-2018-3810">
    <vuln:cve-id>CVE-2018-3810</vuln:cve-id>
    <vuln:published-datetime>2018-01-01T01:29:00.217-05:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2018-01-09T21:29:33.677-05:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>EXPLOIT-DB</vuln:source>
      <vuln:reference href="https://www.exploit-db.com/exploits/43420/" xml:lang="en">43420</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://limbenjamin.com/articles/smart-google-code-inserter-auth-bypass.html" xml:lang="en">https://limbenjamin.com/articles/smart-google-code-inserter-auth-bypass.html</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/smart-google-code-inserter/#developers" xml:lang="en">https://wordpress.org/plugins/smart-google-code-inserter/#developers</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wpvulndb.com/vulnerabilities/8987" xml:lang="en">https://wpvulndb.com/vulnerabilities/8987</vuln:reference>
    </vuln:references>
    <vuln:summary>Authentication Bypass vulnerability in the Oturia Smart Google Code Inserter plugin before 3.5 for WordPress allows unauthenticated attackers to insert arbitrary JavaScript or HTML code (via the sgcgoogleanalytic parameter) that runs on all pages served by WordPress. The saveGoogleCode() function in smartgooglecode.php does not check if the current request is made by an authorized user, thus allowing any unauthenticated user to successfully update the inserted code.</vuln:summary>
  </entry>
  <entry id="CVE-2018-3811">
    <vuln:cve-id>CVE-2018-3811</vuln:cve-id>
    <vuln:published-datetime>2018-01-01T01:29:00.247-05:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2018-01-09T21:29:33.723-05:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>EXPLOIT-DB</vuln:source>
      <vuln:reference href="https://www.exploit-db.com/exploits/43420/" xml:lang="en">43420</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://limbenjamin.com/articles/smart-google-code-inserter-auth-bypass.html" xml:lang="en">https://limbenjamin.com/articles/smart-google-code-inserter-auth-bypass.html</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wordpress.org/plugins/smart-google-code-inserter/#developers" xml:lang="en">https://wordpress.org/plugins/smart-google-code-inserter/#developers</vuln:reference>
    </vuln:references>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://wpvulndb.com/vulnerabilities/8988" xml:lang="en">https://wpvulndb.com/vulnerabilities/8988</vuln:reference>
    </vuln:references>
    <vuln:summary>SQL Injection vulnerability in the Oturia Smart Google Code Inserter plugin before 3.5 for WordPress allows unauthenticated attackers to execute SQL queries in the context of the web server. The saveGoogleAdWords() function in smartgooglecode.php did not use prepared statements and did not sanitize the $_POST["oId"] variable before passing it as input into the SQL query.</vuln:summary>
  </entry>
  <entry id="CVE-2018-3813">
    <vuln:cve-id>CVE-2018-3813</vuln:cve-id>
    <vuln:published-datetime>2018-01-01T15:29:00.207-05:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2018-01-01T15:29:00.207-05:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="http://misteralfa-hack.blogspot.cl/2018/01/brickstream-recuento-y-seguimiento-de.html" xml:lang="en">http://misteralfa-hack.blogspot.cl/2018/01/brickstream-recuento-y-seguimiento-de.html</vuln:reference>
    </vuln:references>
    <vuln:summary>getConfigExportFile.cgi on FLIR Brickstream 2300 devices 2.0 4.1.53.166 has Incorrect Access Control, as demonstrated by reading the AVI_USER_ID and AVI_USER_PASSWORD fields via a direct request.</vuln:summary>
  </entry>
  <entry id="CVE-2018-3814">
    <vuln:cve-id>CVE-2018-3814</vuln:cve-id>
    <vuln:published-datetime>2018-01-01T15:29:00.240-05:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2018-01-01T15:29:00.257-05:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://github.com/Snowty/myCVE/blob/master/CraftCMS-2.6.3000/README.md" xml:lang="en">https://github.com/Snowty/myCVE/blob/master/CraftCMS-2.6.3000/README.md</vuln:reference>
    </vuln:references>
    <vuln:summary>Craft CMS 2.6.3000 allows remote attackers to execute arbitrary PHP code by using the "Assets-&gt;Upload files" screen and then the "Replace it" option, because this allows a .jpg file to have embedded PHP code, and then be renamed to a .php extension.</vuln:summary>
  </entry>
  <entry id="CVE-2018-3815">
    <vuln:cve-id>CVE-2018-3815</vuln:cve-id>
    <vuln:published-datetime>2018-01-08T00:29:00.290-05:00</vuln:published-datetime>
    <vuln:last-modified-datetime>2018-01-08T00:29:00.290-05:00</vuln:last-modified-datetime>
    <vuln:references xml:lang="en" reference_type="UNKNOWN">
      <vuln:source>MISC</vuln:source>
      <vuln:reference href="https://packetstormsecurity.com/files/145724/communigatepro62-spoof" xml:lang="en">https://packetstormsecurity.com/files/145724/communigatepro62-spoof</vuln:reference>
    </vuln:references>
    <vuln:summary>The "XML Interface to Messaging, Scheduling, and Signaling" (XIMSS) protocol implementation in CommuniGate Pro (CGP) 6.2 suffers from a Missing XIMSS Protocol Validation attack that leads to an email spoofing attack, allowing a malicious authenticated attacker to send a message from any source email address. The attack uses an HTTP POST request to a /Session URI, and interchanges the XML From and To elements.</vuln:summary>
  </entry>
</nvd>